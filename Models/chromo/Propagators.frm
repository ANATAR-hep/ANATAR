*****************************************************************************************************
* File automalically generated by FeynRules -                                                       *
* date and time of generation : Mon 15 Sep 2025 14:33:37                                            *
* FeynRules model information :                                                                     *
*   Authors: A. Vasquez                                                                             *
*   Version: 1.final                                                                                *
*   Date: 2025                                                                                      *
*   Institutions: Bonn U.                                                                           *
*   Emails:                                                                                         *
*****************************************************************************************************


*****  This file contains the Propagators   *****


#procedure Propagators
.sort

id   pro(ff?Field(x?,y?partTagInt[n],?a)) = pro(ff(x,y,?a,IntLor[n]));
id   pro(ff?Fermion(x?,y?partTagInt[n],p1?,iLor1?,Spin1?,iLor2?)) = pro(ff(x,y,p1,Spin1,IntSpin[n]));
id   pro(ff?Fermion(x?,y?partTagInt[n],p1?,iLor1?,Spin1?,Colour1?,iLor2?)) = pro(ff(x,y,p1,Spin1,IntSpin[n],Colour1,IntColour[n]));
id   pro(ff?Gluoned(x?,y?partTagInt[n],p1?,iLor1?,Gluon1?,iLor2?)) = pro(ff(x,y,p1,iLor1,iLor2,Gluon1,IntGluon[n]));
id   pro(ff?Gluoned(x?,y?partTagInt[n],0,iLor1?,Gluon1?,iLor2?)) = pro(ff(x,y,0,iLor1,iLor2,Gluon1,IntGluon[n]));


*********************************************
*    Propagators non dependent on Gauge     *
*********************************************


id   pro(b(?a, p1?, Spin1?, Spin2?, Colour1?, Colour2?)) = im*Den(p1, MB)*d_(Colour1, Colour2)*(MB*GammaM(1, Spin1, Spin2) + GammaM(p1, Spin1, Spin2));
id   pro(ghG(?a, p1?, Lor1?, Lor2?, Gluon1?, Gluon2?)) = im*Den(p1, 0)*d_(Gluon1, Gluon2);
id   pro(H(?a, p1?, Lor1?, Lor2?)) = im*Den(p1, MH);
id   pro(t(?a, p1?, Spin1?, Spin2?, Colour1?, Colour2?)) = im*Den(p1, MT)*d_(Colour1, Colour2)*(MT*GammaM(1, Spin1, Spin2) + GammaM(p1, Spin1, Spin2));

#endprocedure Propagators

*********************************************
*       Propagators QCD RXi Gauges          *
*********************************************

*****  Propagators QCD Feynman Gauge  *****

#procedure PropagatorsQCDFeynmanGauge
.sort

id   pro(G(?a, p1?, Lor1?, Lor2?, Gluon1?, Gluon2?)) = -im*Den(p1, 0)*d_(Gluon1, Gluon2)*(d_(Lor1, Lor2));

#endprocedure PropagatorsQCDFeynmanGauge

*****  Propagators RXi Gauge  *****

#procedure PropagatorsQCDRXiGauge
.sort

id   pro(G(?a, p1?, Lor1?, Lor2?, Gluon1?, Gluon2?)) = -im*Den(p1, 0)*d_(Gluon1, Gluon2)*(d_(Lor1, Lor2) - (1 - RXi)*(p1(Lor1)*p1(Lor2))*Den(p1,0));

#endprocedure PropagatorsQCDRXiGauge

*********************************************
*          Propagators EW Gauges            *
*********************************************

*****  Propagators EW Feynman Gauges  *****

#procedure PropagatorsEWFeynmanGauge
.sort

id   pro(G0(?a, p1?, Lor1?, Lor2?)) = im*Den(p1, MZ);
id   pro(GP(?a, p1?, Lor1?, Lor2?)) = im*Den(p1, MW);

#endprocedure PropagatorsEWUnitaryGauge

*****  Propagators EW Unitary Gauges  *****

#procedure PropagatorsEWUnitaryGauge
.sort

id   pro(G0(?a, p1?, Lor1?, Lor2?)) = 0;
id   pro(GP(?a, p1?, Lor1?, Lor2?)) = 0;

#endprocedure PropagatorsEWUnitaryGauge

